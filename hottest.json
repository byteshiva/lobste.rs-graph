[{"short_id":"jkct2m","short_id_url":"https://lobste.rs/s/jkct2m","created_at":"2024-01-23T06:42:32.000-06:00","title":"Avoid Async Rust","url":"https://blog.hugpoint.tech/avoid_async_rust.html","score":13,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jkct2m/avoid_async_rust","submitter_user":{"username":"linkdd","created_at":"2023-06-22T15:00:49.000-05:00","is_admin":false,"about":"\u003e Je suis tombé dans l'informatique étant petit, et les effets sont devenus permanent.\r\n\r\nI'm a developer who believes that any line of code merged in master/main is \"legacy\".\r\n\r\nYet, I still write some technical-debt as a hobby:\r\n\r\n  - https://letlang.dev\r\n  - https://kubirds.com\r\n  - https://linkdd.github.io\r\n  - https://david-delassus.medium.com","is_moderator":false,"karma":284,"avatar_url":"/avatars/linkdd-100.png","invited_by_user":"jcs","github_username":"linkdd"},"user_is_author":false,"tags":["programming","rust"]},{"short_id":"12qnj3","short_id_url":"https://lobste.rs/s/12qnj3","created_at":"2024-01-23T05:20:02.000-06:00","title":"Nominal Types in Rust","url":"https://experimentalworks.net/posts/2024-01-22-simple-phantom-types/","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/12qnj3/nominal_types_rust","submitter_user":{"username":"dsp","created_at":"2020-12-05T21:10:32.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":243,"avatar_url":"/avatars/dsp-100.png","invited_by_user":"wbthomason","github_username":"dsp"},"user_is_author":true,"tags":["programming","rust"]},{"short_id":"eiq8ev","short_id_url":"https://lobste.rs/s/eiq8ev","created_at":"2024-01-22T10:51:17.000-06:00","title":"An RNG that runs in your brain","url":"https://www.hillelwayne.com/post/randomness/","score":49,"flags":0,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eiq8ev/rng_runs_your_brain","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":28904,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne"},"user_is_author":true,"tags":["math","perl"]},{"short_id":"niwfet","short_id_url":"https://lobste.rs/s/niwfet","created_at":"2024-01-23T02:18:31.000-06:00","title":"Yacc is dead (2010)","url":"https://arxiv.org/pdf/1010.5023.pdf","score":12,"flags":0,"comment_count":7,"description":"\u003cp\u003eWe present two novel approaches to parsing context-free languages. The first approach is based on an extension of Brzozowski’s derivative from regular expressions to context-free grammars. The second approach is based on a generalization of the derivative to parser combinators. The payoff of these techniques is a small (less than 250 lines of code), easy-to-implement parsing library capable of parsing arbitrary context-free grammars into lazy parse forests. Implementations for both Scala and Haskell are provided. Preliminary experiments with S-Expressions parsed millions of tokens per second, which suggests this technique is efficient enough for use in practice.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/1010.5023\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"We present two novel approaches to parsing context-free languages. The first approach is based on an extension of Brzozowski's derivative from regular expressions to context-free grammars. The second approach is based on a generalization of the derivative to parser combinators. The payoff of these techniques is a small (less than 250 lines of code), easy-to-implement parsing library capable of parsing arbitrary context-free grammars into lazy parse forests. Implementations for both Scala and Haskell are provided. Preliminary experiments with S-Expressions parsed millions of tokens per second, which suggests this technique is efficient enough for use in practice.\r\n\r\n[arXiv](https://arxiv.org/abs/1010.5023)","comments_url":"https://lobste.rs/s/niwfet/yacc_is_dead_2010","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":101663,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"user_is_author":false,"tags":["compilers","pdf"]},{"short_id":"aat3zu","short_id_url":"https://lobste.rs/s/aat3zu","created_at":"2024-01-22T16:31:24.000-06:00","title":"Re: The Case for Rust (in the base system)","url":"https://lists.freebsd.org/archives/freebsd-hackers/2024-January/002876.html","score":32,"flags":0,"comment_count":23,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aat3zu/re_case_for_rust_base_system","submitter_user":{"username":"kuijsten","created_at":"2018-09-06T05:56:47.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":994,"avatar_url":"/avatars/kuijsten-100.png","invited_by_user":"taal","github_username":"timkuijsten"},"user_is_author":false,"tags":["freebsd","rust"]},{"short_id":"i4nfjj","short_id_url":"https://lobste.rs/s/i4nfjj","created_at":"2024-01-23T06:56:34.000-06:00","title":"Donor Bounties: A New Kind of Feature Bounty","url":"https://ziglang.org/news/announcing-donor-bounties/","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/i4nfjj/donor_bounties_new_kind_feature_bounty","submitter_user":{"username":"kristoff","created_at":"2020-02-10T11:11:41.000-06:00","is_admin":false,"about":"Host of Zig SHOWTIME (https://zig.show)\r\n\r\ntwitter: https://twitter.com/croloris\r\ngithub: https://github.com/kristoff-it","is_moderator":false,"karma":3135,"avatar_url":"/avatars/kristoff-100.png","invited_by_user":"guyroyse"},"user_is_author":true,"tags":["zig"]},{"short_id":"qxeujn","short_id_url":"https://lobste.rs/s/qxeujn","created_at":"2024-01-22T17:24:17.000-06:00","title":"OpenTofu is going GA","url":"https://opentofu.org/blog/opentofu-is-going-ga/","score":25,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qxeujn/opentofu_is_going_ga","submitter_user":{"username":"strugee","created_at":"2017-05-26T03:08:28.000-05:00","is_admin":false,"about":"25\\. FLOSS zealot. UNIX philosophy subscriber. Sysadmin. Conference attendee \u0026 speaker.\r\n\r\nI am the primary maintainer of pump.io, the principal author of StraticJS, and a comaintainer of PRISM Break. I was an Invited Expert at the W3C's Social Working Group.","is_moderator":false,"karma":2094,"avatar_url":"/avatars/strugee-100.png","invited_by_user":"jamesjporter","github_username":"strugee","twitter_username":"strugee2","keybase_signatures":[{"kb_username":"strugee","sig_hash":"53bb7145d17a10117670f38007e634d07d0762f721773dd9517ceb92316b47810f"}]},"user_is_author":false,"tags":["devops","release"]},{"short_id":"j9azeb","short_id_url":"https://lobste.rs/s/j9azeb","created_at":"2024-01-23T05:17:51.000-06:00","title":"Formalizing Date Arithmetic and Statically Detecting Ambiguities for the Law","url":"https://rmonat.fr/data/pubs/2024/2024-04-08_esop_dates.pdf","score":5,"flags":0,"comment_count":0,"description":"\u003cp\u003eAbstract:\u003c/p\u003e\n\u003cp\u003eLegal expert systems routinely rely on date computations to determine the eligibility of a citizen to social benefits or whether an application has been filed on time. Unfortunately, date arithmetic exhibits many corner cases, which are handled differently from one library to the other, making faithfully transcribing the law into code error-prone, and possibly leading to heavy financial and legal consequences for users. In this work, we aim to provide a solid foundation for date arithmetic working on days, months and years. We first present a novel, formal semantics for date computations, and formally establish several semantic properties through a mechanization in the F⋆ proof assistant. Building upon this semantics, we then propose a static analysis by abstract interpretation to automatically detect ambiguities in date computations. We finally integrate our approach in the Catala language, a recent domain-specific language for formalizing computational law, and use it to analyze the Catala implementation of the French housing benefits, leading to the discovery of several date-related ambiguities.\u003c/p\u003e\n","description_plain":"Abstract:\r\n\r\nLegal expert systems routinely rely on date computations to determine the eligibility of a citizen to social benefits or whether an application has been filed on time. Unfortunately, date arithmetic exhibits many corner cases, which are handled differently from one library to the other, making faithfully transcribing the law into code error-prone, and possibly leading to heavy financial and legal consequences for users. In this work, we aim to provide a solid foundation for date arithmetic working on days, months and years. We first present a novel, formal semantics for date computations, and formally establish several semantic properties through a mechanization in the F⋆ proof assistant. Building upon this semantics, we then propose a static analysis by abstract interpretation to automatically detect ambiguities in date computations. We finally integrate our approach in the Catala language, a recent domain-specific language for formalizing computational law, and use it to analyze the Catala implementation of the French housing benefits, leading to the discovery of several date-related ambiguities.","comments_url":"https://lobste.rs/s/j9azeb/formalizing_date_arithmetic_statically","submitter_user":{"username":"raphaelm","created_at":"2021-04-23T03:42:11.000-05:00","is_admin":false,"about":"Formal methods researcher at Inria, Lille, France","is_moderator":false,"karma":18,"avatar_url":"/avatars/raphaelm-100.png","invited_by_user":"denismerigoux"},"user_is_author":true,"tags":["formalmethods","law","pdf","plt"]},{"short_id":"degsgz","short_id_url":"https://lobste.rs/s/degsgz","created_at":"2024-01-22T12:50:34.000-06:00","title":"Zig's HashMap","url":"https://www.openmymind.net/Zigs-HashMap-Part-1/","score":31,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/degsgz/zig_s_hashmap","submitter_user":{"username":"carlana","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carlana Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":16372,"avatar_url":"/avatars/carlana-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson"},"user_is_author":false,"tags":["zig"]},{"short_id":"yn7pbi","short_id_url":"https://lobste.rs/s/yn7pbi","created_at":"2024-01-23T07:38:29.000-06:00","title":"ServerFree Architecture: run the \"backend code\" and the DB (SQLite) in the browser","url":"https://subzero.cloud/blog/serverfree-architecture/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yn7pbi/serverfree_architecture_run_backend","submitter_user":{"username":"ruslan_talpa","created_at":"2017-03-07T12:23:58.000-06:00","is_admin":false,"about":"Founder of subZero\r\n\r\nThe TypeScript library to build internal tools fast\r\n\r\nhttps://getsubzero.today/\r\n\r\nruslan.talpa [at] subzero [dot] cloud","is_moderator":false,"karma":32,"avatar_url":"/avatars/ruslan_talpa-100.png","invited_by_user":"phil"},"user_is_author":true,"tags":["api","browsers","databases","javascript","show","wasm","web"]},{"short_id":"vcbixd","short_id_url":"https://lobste.rs/s/vcbixd","created_at":"2024-01-22T07:39:15.000-06:00","title":"Trunk-Based Development","url":"https://trunkbaseddevelopment.com/","score":30,"flags":1,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vcbixd/trunk_based_development","submitter_user":{"username":"DLion","created_at":"2023-05-05T04:47:50.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":29,"avatar_url":"/avatars/DLion-100.png","invited_by_user":"uncle_kras","github_username":"dlion","twitter_username":"DLion92"},"user_is_author":false,"tags":["programming","vcs"]},{"short_id":"wwq8el","short_id_url":"https://lobste.rs/s/wwq8el","created_at":"2024-01-23T00:35:11.000-06:00","title":"Announcing the Saber Virtual Machine","url":"https://ryanbrewer.dev/posts/announcing-svm.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wwq8el/announcing_saber_virtual_machine","submitter_user":{"username":"munksgaard","created_at":"2020-02-25T08:52:36.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":372,"avatar_url":"/avatars/munksgaard-100.png","invited_by_user":"athas"},"user_is_author":false,"tags":["compilers","plt"]},{"short_id":"q0bxri","short_id_url":"https://lobste.rs/s/q0bxri","created_at":"2024-01-23T04:55:38.000-06:00","title":"Towards member patterns","url":"https://mail.openjdk.org/pipermail/amber-spec-experts/2024-January/003976.html","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/q0bxri/towards_member_patterns","submitter_user":{"username":"gf0","created_at":"2023-07-09T03:22:03.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":601,"avatar_url":"/avatars/gf0-100.png","invited_by_user":"bsandro"},"user_is_author":false,"tags":["java","plt"]},{"short_id":"yd2arq","short_id_url":"https://lobste.rs/s/yd2arq","created_at":"2024-01-22T20:25:18.000-06:00","title":"The end of “Useless Ruby sugar”: On intuitions and evolutions","url":"https://zverok.substack.com/p/the-end-of-useless-ruby-sugar-on","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yd2arq/end_useless_ruby_sugar_on_intuitions","submitter_user":{"username":"MatheusRich","created_at":"2022-01-20T08:23:08.000-06:00","is_admin":false,"about":"🇧🇷 developer @ thoughtbot","is_moderator":false,"karma":532,"avatar_url":"/avatars/MatheusRich-100.png","invited_by_user":"edwardloveall","github_username":"MatheusRich","twitter_username":"matheusrich"},"user_is_author":false,"tags":["ruby"]},{"short_id":"wwubmh","short_id_url":"https://lobste.rs/s/wwubmh","created_at":"2024-01-23T07:23:49.000-06:00","title":"Scaling Terraform at ThousandEyes","url":"https://medium.com/thousandeyes-engineering/scaling-terraform-at-thousandeyes-b2a581b8b0b0","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wwubmh/scaling_terraform_at_thousandeyes","submitter_user":{"username":"ricardbejarano","created_at":"2018-10-10T16:53:50.000-05:00","is_admin":false,"about":"Site Reliability Engineer at Cisco","is_moderator":false,"karma":606,"avatar_url":"/avatars/ricardbejarano-100.png","invited_by_user":"ZeroFiveFive"},"user_is_author":true,"tags":["devops"]},{"short_id":"gok1tn","short_id_url":"https://lobste.rs/s/gok1tn","created_at":"2024-01-22T09:36:17.000-06:00","title":"A Modern Compiler for the French Tax Code","url":"https://arxiv.org/pdf/2011.07966.pdf","score":29,"flags":0,"comment_count":0,"description":"\u003cp\u003eAbstract:\u003c/p\u003e\n\u003cp\u003eIn France, income tax is computed from taxpayers’ individual returns, using an algorithm that is authored, designed and maintained by the French Public Finances Directorate (DGFiP).\nThis algorithm relies on a legacy custom language and compiler originally designed in 1990, which unlike French wine, did not age well with time.\nOwing to the shortcomings of the input language and the technical limitations of the compiler, the algorithm is proving harder and harder to maintain, relying on ad-hoc behaviors and workarounds to implement the most recent changes in tax law.\nCompetence loss and aging code also mean that the system does not benefit from any modern compiler techniques that would increase confidence in the implementation.\u003c/p\u003e\n\u003cp\u003eWe overhaul this infrastructure and present Mlang, an open-source compiler toolchain whose goal is to replace the existing infrastructure.\nMlang is based on a reverse-engineered formalization of the DGFiP’s system, and has been thoroughly validated against the private DGFiP test suite.\nAs such, Mlang has a formal semantics; eliminates previous hand-written workarounds in C; compiles to modern languages (Python); and enables a variety of instrumentations, providing deep insights about the essence of French income tax computation.\nThe DGFiP is now officially transitioning to Mlang for their production system.\u003c/p\u003e\n","description_plain":"Abstract:\r\n\r\nIn France, income tax is computed from taxpayers’ individual returns, using an algorithm that is authored, designed and maintained by the French Public Finances Directorate (DGFiP).\r\nThis algorithm relies on a legacy custom language and compiler originally designed in 1990, which unlike French wine, did not age well with time.\r\nOwing to the shortcomings of the input language and the technical limitations of the compiler, the algorithm is proving harder and harder to maintain, relying on ad-hoc behaviors and workarounds to implement the most recent changes in tax law.\r\nCompetence loss and aging code also mean that the system does not benefit from any modern compiler techniques that would increase confidence in the implementation.\r\n\r\nWe overhaul this infrastructure and present Mlang, an open-source compiler toolchain whose goal is to replace the existing infrastructure.\r\nMlang is based on a reverse-engineered formalization of the DGFiP’s system, and has been thoroughly validated against the private DGFiP test suite.\r\nAs such, Mlang has a formal semantics; eliminates previous hand-written workarounds in C; compiles to modern languages (Python); and enables a variety of instrumentations, providing deep insights about the essence of French income tax computation.\r\nThe DGFiP is now officially transitioning to Mlang for their production system.","comments_url":"https://lobste.rs/s/gok1tn/modern_compiler_for_french_tax_code","submitter_user":{"username":"cyberia","created_at":"2021-05-11T06:41:47.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":366,"avatar_url":"/avatars/cyberia-100.png","invited_by_user":"iris"},"user_is_author":false,"tags":["compilers","formalmethods","pdf","plt"]},{"short_id":"818i8h","short_id_url":"https://lobste.rs/s/818i8h","created_at":"2024-01-22T23:18:34.000-06:00","title":"From slow to SIMD: A Go optimization story","url":"https://sourcegraph.com/blog/slow-to-simd","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/818i8h/from_slow_simd_go_optimization_story","submitter_user":{"username":"bz","created_at":"2022-03-16T23:09:12.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":5,"avatar_url":"/avatars/bz-100.png","invited_by_user":"herval"},"user_is_author":false,"tags":["go","performance"]},{"short_id":"0atyak","short_id_url":"https://lobste.rs/s/0atyak","created_at":"2024-01-23T10:12:57.000-06:00","title":"TypeSpec","url":"https://typespec.io","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0atyak/typespec","submitter_user":{"username":"adamshaylor","created_at":"2020-10-26T20:04:57.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2938,"avatar_url":"/avatars/adamshaylor-100.png","invited_by_user":"peterc","github_username":"adamshaylor","keybase_signatures":[{"kb_username":"adamshaylor","sig_hash":"0ebd1a3d88d97f20922147a75889dfcae02b632d94156b9315a6d93384ae2e4f0f"}]},"user_is_author":false,"tags":["api","web"]},{"short_id":"jswuxr","short_id_url":"https://lobste.rs/s/jswuxr","created_at":"2024-01-22T09:28:14.000-06:00","title":"Cognitive Load In Software Development","url":"https://github.com/zakirullin/cognitive-load","score":17,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jswuxr/cognitive_load_software_development","submitter_user":{"username":"skleinxyz","created_at":"2022-12-13T03:11:24.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":135,"avatar_url":"/avatars/skleinxyz-100.png","invited_by_user":"Exagone313","github_username":"stephane-klein","twitter_username":"klein_stephane"},"user_is_author":false,"tags":["programming"]},{"short_id":"evnq0d","short_id_url":"https://lobste.rs/s/evnq0d","created_at":"2024-01-23T09:16:53.000-06:00","title":"Serverless ClickHouse Cloud - ASDS Chapter 5 (part 1)","url":"https://jack-vanlightly.com/analyses/2024/1/23/serverless-clickhouse-cloud-asds-chapter-5-part-1","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/evnq0d/serverless_clickhouse_cloud_asds","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Info at eatonphil.com.\r\n\r\nphil@eatonphil.com","is_moderator":false,"karma":5657,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"user_is_author":false,"tags":["databases","distributed"]},{"short_id":"mq6mm5","short_id_url":"https://lobste.rs/s/mq6mm5","created_at":"2024-01-23T09:14:15.000-06:00","title":"A Cloud-Optimized Transport Protocol for Elastic and Scalable HPC (2020)","url":"https://assets.amazon.science/a6/34/41496f64421faafa1cbe301c007c/a-cloud-optimized-transport-protocol-for-elastic-and-scalable-hpc.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mq6mm5/cloud_optimized_transport_protocol_for","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Info at eatonphil.com.\r\n\r\nphil@eatonphil.com","is_moderator":false,"karma":5657,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"user_is_author":false,"tags":["linux","networking","pdf"]},{"short_id":"d3xkc4","short_id_url":"https://lobste.rs/s/d3xkc4","created_at":"2024-01-23T09:13:16.000-06:00","title":"VART: A Persistent Data Structure For Snapshot Isolation","url":"https://surrealdb.com/blog/vart-a-persistent-data-structure-for-snapshot-isolation","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/d3xkc4/vart_persistent_data_structure_for","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Info at eatonphil.com.\r\n\r\nphil@eatonphil.com","is_moderator":false,"karma":5657,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"user_is_author":false,"tags":["databases","rust"]},{"short_id":"10t8eg","short_id_url":"https://lobste.rs/s/10t8eg","created_at":"2024-01-23T08:19:08.000-06:00","title":"Introduction to Loro's Rich Text CRDT","url":"https://www.loro.dev/blog/loro-richtext","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/10t8eg/introduction_loro_s_rich_text_crdt","submitter_user":{"username":"jakelazaroff","created_at":"2023-03-10T14:26:42.000-06:00","is_admin":false,"about":"designer, programmer, musician. https://jakelazaroff.com","is_moderator":false,"karma":185,"avatar_url":"/avatars/jakelazaroff-100.png","invited_by_user":"ngoldbaum","github_username":"jakelazaroff"},"user_is_author":false,"tags":["distributed"]},{"short_id":"om55c2","short_id_url":"https://lobste.rs/s/om55c2","created_at":"2024-01-22T13:10:51.000-06:00","title":"What are you doing this week?","url":"","score":6,"flags":0,"comment_count":14,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/om55c2/what_are_you_doing_this_week","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":9732,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius","twitter_username":"Caius"},"user_is_author":true,"tags":["ask","programming"]},{"short_id":"muoar2","short_id_url":"https://lobste.rs/s/muoar2","created_at":"2024-01-22T10:07:35.000-06:00","title":"Spritely Goblins v0.12.0 released","url":"https://spritely.institute/news/spritely-goblins-v0120-released-two-new-netlayers-join-the-ocapn-family-and-more.html","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/muoar2/spritely_goblins_v0_12_0_released","submitter_user":{"username":"flockofbirbs","created_at":"2023-01-30T21:25:29.000-06:00","is_admin":false,"about":"Core Infrastructure Architect at Spritely Institute","is_moderator":false,"karma":325,"avatar_url":"/avatars/flockofbirbs-100.png","invited_by_user":"zenhack"},"user_is_author":false,"tags":["distributed","lisp"]}]